* 配置
** fonts
*** 设置方法
**** 打印系统字体列表
     #+BEGIN_SRC emacs-lisp
     (print (font-family-list))
     #+END_SRC
**** 设置英文字体（见设置默认字体）
**** 设置中文字体
     #+BEGIN_SRC emacs-lisp
     ;设置中文字体方法一
       (dolist (charset '(kana han symbol cjk-misc bopomofo))
         (set-fontset-font (frame-parameter nil 'font)
                           charset (font-spec :family "文泉驿等宽微米黑"
                                             :size 16)))
     ;;设置中文字体方法二
       (set-fontset-font "fontset-default"
                         (cons (decode-char 'ucs #x4e00)
                               (decode-char 'ucs #x9fff))
                         "-*-文泉驿等宽微米黑-*-*-*-*-16-*-*-*-*-*-*-*")
   #+END_SRC
**** 设置默认字体
     #+BEGIN_SRC emacs-lisp
     dotspacemacs-default-font '("Source Code Pro"
                                :size 14
                                :weight normal
                                :width normal
                                :powerline-scale 1.1)
     #+END_SRC
*** 英文字体选择
**** Source Code pro
     adobe提供的免费字体，字母等宽且l与1,0与o之前的区分非常明显；
     下载地址:https://github.com/adobe-fonts/source-code-pro#font-installation-instructions
     缺点：不包含中文字体
*** 中文字体选择
*** 中英文字体选择
**** Inziu losvka （备选）
     等宽，支持多数西欧语言，高识别度，中文，汉字宽度是西文的两倍
**** Inconsolata  
     等宽，支持多数西欧语言，高识别度，中文，汉字宽度是西文的两倍
     下载链接：https://github.com/google/fonts/blob/master/ofl/inconsolata/
*** 问题解决
***** 显示缺少Source Code pro字体
      先去下载编译好的Source Code pro字体，然后解压缩，在某个文件浏览器中，点击SourceCodeVariable-xx.otf文件，用字体管理器打开该文件后，选择“安装”
** 国内源
  根据你的需求，设置 package-archives ，比如用 GNU ELPA 和 MELPA：
    (setq package-archives '(("gnu"   . "http://elpa.emacs-china.org/gnu/")
                            ("melpa" . "http://elpa.emacs-china.org/melpa/")))

  Spacemacs 用户
  添加下面的代码到 .spacemacs 的 dotspacemacs/user-init()

    (setq configuration-layer--elpa-archives
        '(("melpa-cn" . "http://elpa.emacs-china.org/melpa/")
          ("org-cn"   . "http://elpa.emacs-china.org/org/")
          ("gnu-cn"   . "http://elpa.emacs-china.org/gnu/")))

  develop 分支
  使用 configuration-layer-elpa-archives 代替原来的 configuration-layer--elpa-archives （ -- 换成 - ）
    (setq configuration-layer-elpa-archives
        '(("melpa-cn" . "http://elpa.emacs-china.org/melpa/")
          ("org-cn"   . "http://elpa.emacs-china.org/org/")
          ("gnu-cn"   . "http://elpa.emacs-china.org/gnu/")))

** 使用系统剪切板
   添加到 .spacemacs 的 dotspacemacs/user-config
*** 使用 gui 的 emacs 支持系统剪切板
    ;; 对 termianl 启动的 emacs 无用
    (setq x-select-enable-clipboard t)
*** Linux 下 terminal 下启动的 emacs 支持系统剪切板
    #+BEGIN_SRC elisp
  ;; If emacs is run in a terminal, the clipboard- functions have no
  ;; effect. Instead, we use of xsel, see
  ;; http://www.vergenet.net/~conrad/software/xsel/ -- "a command-line
  ;; program for getting and setting the contents of the X selection"
  (unless window-system
    (when (getenv "DISPLAY")
      ;; Callback for when user cuts
      (defun xsel-cut-function (text &optional push)
        ;; Insert text to temp-buffer, and "send" content to xsel stdin
        (with-temp-buffer
          (insert text)
          ;; I prefer using the "clipboard" selection (the one the
          ;; typically is used by c-c/c-v) before the primary selection
          ;; (that uses mouse-select/middle-button-click)
          (call-process-region (point-min) (point-max) "xsel" nil 0 nil "--clipboard" "--input")))
      ;; Call back for when user pastes
      (defun xsel-paste-function()
        ;; Find out what is current selection by xsel. If it is different
        ;; from the top of the kill-ring (car kill-ring), then return
        ;; it. Else, nil is returned, so whatever is in the top of the
        ;; kill-ring will be used.
        (let ((xsel-output (shell-command-to-string "xsel --clipboard --output")))
          (unless (string= (car kill-ring) xsel-output)
            xsel-output )))
      ;; Attach callbacks to hooks
      (setq interprogram-cut-function 'xsel-cut-function)
      (setq interprogram-paste-function 'xsel-paste-function)
      ;; Idea from
      ;; http://shreevatsa.wordpress.com/2006/10/22/emacs-copypaste-and-x/
      ;; http://www.mail-archive.com/help-gnu-emacs@gnu.org/msg03577.html
      ))
    #+END_SRC
*** Mac 下 terminal 下启动的 emacs 支持系统剪切板
    #+BEGIN_SRC elisp
;;start 设置剪切板共享 
(defun copy-from-osx () 
(shell-command-to-string "pbpaste")) 
(defun paste-to-osx (text &optional push) 
(let ((process-connection-type nil)) 
(let ((proc (start-process"pbcopy" "*Messages*" "pbcopy"))) 
(process-send-string proc text) 
(process-send-eof proc)))) 
(setq interprogram-cut-function 'paste-to-osx) 
(setq interprogram-paste-function 'copy-from-osx) 
;;end 设置剪切板共享 
    #+END_SRC
* 看代码
** 折叠
*** 启用了evil，可以使用vim的折叠快捷键
    | 快捷键 | 说明               |
    |--------+--------------------|
    | za     | 切换当前级别的展开 |
    | zr     | 展开所有           |
    | zm     | 关闭所有           |
    | ..     |                    |
** 跳转（和查找）
** 关注区域（narrow）
* 快捷键
  可以用 SPC u , 来触发 C-u
